{"ast":null,"code":"import { Niivue } from '@niivue/niivue';\nconst niivue = new Niivue();\nexport default {\n  name: \"niivue\",\n  props: {\n    volumeUrl: String\n  },\n  data() {\n    return {\n      nv1: new niivue.Niivue({\n        show3Dcrosshair: true,\n        backColor: [1, 1, 1, 1]\n      }),\n      volumeList1: []\n    };\n  },\n  methods: {\n    async initializeVolumeList() {\n      this.nv1 = new niivue.Niivue({\n        show3Dcrosshair: true,\n        backColor: [1, 1, 1, 1]\n      });\n      this.volumeList1 = [\n      // first item is background image\n      {\n        url: this.volumeUrl,\n        colorMap: \"gray\"\n      }];\n      this.nv1.setSliceType(this.nv1.sliceTypeRender); //all three directions of slices are displayed if removed.\n      this.nv1.attachTo('gl1'); //attaches the entire image to the canvas.\n      this.nv1.setClipPlane([-0.1, 270, 0]); //displays the clip plane. displaced in the x? direction by 0.1. rotated 270 degrees about the z axis. The third number clearly has to do with angle and initial position in the z direction but my experimentation is not leading me to a clear result.\n      this.nv1.loadVolumes(this.volumeList1); //Displayes the brain.\n    },\n\n    async changeVolume() {\n      this.volumeList1 = [{\n        url: this.volumeUrl,\n        colorMap: \"gray\"\n      }];\n      this.nv1.loadVolumes(this.volumeList1);\n      this.nv1.updateGLVolume();\n    }\n  }\n};","map":{"version":3,"names":["Niivue","niivue","name","props","volumeUrl","String","data","nv1","show3Dcrosshair","backColor","volumeList1","methods","initializeVolumeList","url","colorMap","setSliceType","sliceTypeRender","attachTo","setClipPlane","loadVolumes","changeVolume","updateGLVolume"],"sources":["/Users/asagilmore/src/hbnviewer/src/components/Niivue.vue"],"sourcesContent":["<template>\n    <div>NIIVUE</div>\n    <div>\n        NIIVUE file source {{ volumeUrl }}\n        <main id=\"container\">\n            <canvas id=\"gl1\" width=\"1258\" style=\"width: 100%; height: 100%;\" height=\"1200\" tabindex=\"0\"></canvas>\n        </main>\n    </div>\n</template>\n\n<script>\nimport {Niivue} from '@niivue/niivue'\nconst niivue = new Niivue()\n\nexport default {\n    name: \"niivue\",\n    props: {\n        volumeUrl: String,\n    },\n    data(){\n        return{\n            nv1: new niivue.Niivue(({show3Dcrosshair: true, backColor: [1, 1, 1, 1]})),\n            volumeList1:[],\n        }\n    },\n    methods:{\n        async initializeVolumeList(){\n            this.nv1 = new niivue.Niivue(({show3Dcrosshair: true, backColor: [1, 1, 1, 1]}))\n            this.volumeList1 = [\n            // first item is background image\n            {\n                url: this.volumeUrl,\n                colorMap: \"gray\",\n            }\n            ]\n            this.nv1.setSliceType(this.nv1.sliceTypeRender)//all three directions of slices are displayed if removed.\n            this.nv1.attachTo('gl1')//attaches the entire image to the canvas.\n            this.nv1.setClipPlane([-0.1, 270, 0])//displays the clip plane. displaced in the x? direction by 0.1. rotated 270 degrees about the z axis. The third number clearly has to do with angle and initial position in the z direction but my experimentation is not leading me to a clear result.\n            this.nv1.loadVolumes(this.volumeList1)//Displayes the brain.\n        },\n        async changeVolume(){\n            this.volumeList1 = [{url: this.volumeUrl, colorMap: \"gray\",}]\n            this.nv1.loadVolumes(this.volumeList1);\n            this.nv1.updateGLVolume()\n        },\n    }\n}\n</script>"],"mappings":"AAWA,SAAQA,MAAM,QAAO,gBAAe;AACpC,MAAMC,MAAK,GAAI,IAAID,MAAM,CAAC;AAE1B,eAAe;EACXE,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE;IACHC,SAAS,EAAEC;EACf,CAAC;EACDC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,GAAG,EAAE,IAAIN,MAAM,CAACD,MAAM,CAAE;QAACQ,eAAe,EAAE,IAAI;QAAEC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;MAAC,CAAE,CAAC;MAC1EC,WAAW,EAAC;IAChB;EACJ,CAAC;EACDC,OAAO,EAAC;IACJ,MAAMC,oBAAoBA,CAAA,EAAE;MACxB,IAAI,CAACL,GAAE,GAAI,IAAIN,MAAM,CAACD,MAAM,CAAE;QAACQ,eAAe,EAAE,IAAI;QAAEC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;MAAC,CAAE;MAC/E,IAAI,CAACC,WAAU,GAAI;MACnB;MACA;QACIG,GAAG,EAAE,IAAI,CAACT,SAAS;QACnBU,QAAQ,EAAE;MACd,EACA;MACA,IAAI,CAACP,GAAG,CAACQ,YAAY,CAAC,IAAI,CAACR,GAAG,CAACS,eAAe,CAAC;MAC/C,IAAI,CAACT,GAAG,CAACU,QAAQ,CAAC,KAAK,CAAC;MACxB,IAAI,CAACV,GAAG,CAACW,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;MACrC,IAAI,CAACX,GAAG,CAACY,WAAW,CAAC,IAAI,CAACT,WAAW,CAAC;IAC1C,CAAC;;IACD,MAAMU,YAAYA,CAAA,EAAE;MAChB,IAAI,CAACV,WAAU,GAAI,CAAC;QAACG,GAAG,EAAE,IAAI,CAACT,SAAS;QAAEU,QAAQ,EAAE;MAAO,CAAC;MAC5D,IAAI,CAACP,GAAG,CAACY,WAAW,CAAC,IAAI,CAACT,WAAW,CAAC;MACtC,IAAI,CAACH,GAAG,CAACc,cAAc,CAAC;IAC5B;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}