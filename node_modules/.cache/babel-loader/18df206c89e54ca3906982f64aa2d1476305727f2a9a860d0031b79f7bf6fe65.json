{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \"TESTINGTESTING\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"main\", {\n  id: \"container\"\n}, [/*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"gl\",\n  width: \"1258\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"100%\"\n  },\n  height: \"1200\",\n  tabindex: \"0\"\n})], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, [_createTextVNode(\" NIIVUE file source \" + _toDisplayString($props.volumeUrl) + \" \", 1 /* TEXT */), _hoisted_2])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","width","style","height","tabindex","_hoisted_1","_toDisplayString","$props","volumeUrl","_hoisted_2"],"sources":["/Users/asagilmore/src/hbnviewer/src/components/Niivue.vue"],"sourcesContent":["<template>\n    <div>TESTINGTESTING</div>\n    <div>\n        NIIVUE file source {{ volumeUrl }}\n        <main id=\"container\">\n            <canvas id=\"gl\" width=\"1258\" style=\"width: 100%; height: 100%;\" height=\"1200\" tabindex=\"0\"></canvas>\n        </main>\n    </div>\n</template>\n\n<script>\nimport {Niivue} from '@niivue/niivue'\nconst niivue = new Niivue()\n\nexport default {\n    name: \"niivue\",\n    props: {\n        volumeUrl: String,\n    },\n    data(){\n        return{\n            nv1: new niivue.Niivue(({show3Dcrosshair: true, backColor: [1, 1, 1, 1]})),\n            volumeList:[],\n        }\n    },\n    methods:{\n        async initializeVolumeList(){\n            this.nv1 = new niivue.Niivue(({show3Dcrosshair: true, backColor: [1, 1, 1, 1]}))\n            this.volumeList1 = [\n            // first item is background image\n            {\n                url: this.volumeUrl,\n                colorMap: \"gray\",\n            }\n            ]\n            this.nv1.setSliceType(this.nv1.sliceTypeRender)//all three directions of slices are displayed if removed.\n            this.nv1.attachTo('gl1')//attaches the entire image to the canvas.\n            this.nv1.setClipPlane([-0.1, 270, 0])//displays the clip plane. displaced in the x? direction by 0.1. rotated 270 degrees about the z axis. The third number clearly has to do with angle and initial position in the z direction but my experimentation is not leading me to a clear result.\n            this.nv1.loadVolumes(this.volumeList1)//Displayes the brain.\n        },\n        async changeVolume(){\n            this.volumeList1 = [{url: this.volumeUrl, colorMap: \"gray\",}]\n            this.nv1.loadVolumes(this.volumeList1);\n            this.nv1.updateGLVolume()\n        },\n    },\n    mounted() {\n        nv.attachTo('gl')\n        nv.loadVolumes(this.volumeList)\n    }\n}\n</script>"],"mappings":";gCACIA,mBAAA,CAAyB,aAApB,gBAAc;gCAGfA,mBAAA,CAEO;EAFDC,EAAE,EAAC;AAAW,I,aAChBD,mBAAA,CAAoG;EAA5FC,EAAE,EAAC,IAAI;EAACC,KAAK,EAAC,MAAM;EAACC,KAAkC,EAAlC;IAAA;IAAA;EAAA,CAAkC;EAACC,MAAM,EAAC,MAAM;EAACC,QAAQ,EAAC;;;;6DAJ/FC,UAAyB,EACzBN,mBAAA,CAKM,c,iBALD,sBACkB,GAAAO,gBAAA,CAAGC,MAAA,CAAAC,SAAS,IAAG,GAClC,iBAAAC,UAEO,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}